# version: '3.8'

name: crypto_bot

services:
  bot:
    build: .
    container_name: crypto_bot
    env_file: .env.docker
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - NATS_URL=${NATS_URL}
    volumes:
      - ./bot.py:/app/bot.py
      - ./database:/app/database
      - ./requirements.txt:/app/requirements.txt
      - ./alembic:/app/alembic
      - ./scripts:/app/scripts
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      nats:
        condition: service_started
    restart: always

  db:
    image: postgres:15
    env_file: .env.docker
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: crypto_bot_shard_0,crypto_bot_shard_1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - ./init-shards.sh:/docker-entrypoint-initdb.d/init-shards.sh
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  nats:
    image: nats:latest
    entrypoint: /nats-server  # Команда запуска сервера внутри контейнера
    ports:
      - "4222:4222"  # Основной порт для взаимодействия с сервером
      - "8222:8222"  # Порт для мониторинга сервера по HTTP (понадобится позже)
    volumes:
      - ./nats/data:/data  # Путь, по которому NATS-сервер будет хранить данные вне контейнера

volumes:
  pgdata: